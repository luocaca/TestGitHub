<?xml version="1.0" encoding="utf-8"?>
<resources>

    <attr name="enablePullUp" format="boolean" />
    <attr name="enablePullDown" format="boolean" />
    <attr name="pullBackground" format="color|reference" />

    <declare-styleable name="SmartRefreshLayout">
        <attr name="enablePullUp" />
        <attr name="enablePullDown" />
        <attr name="pullBackground" />
    </declare-styleable>
    <declare-styleable name="MaxHeightView">
        <attr name="mhv_HeightRatio" format="reference|float" />
        <attr name="mhv_HeightDimen" format="reference|dimension" />
    </declare-styleable>
    <declare-styleable name="SnappingStepper">
        <attr name="min" format="integer" />
        <attr name="max" format="integer" />
        <attr name="value" format="integer" />
        <attr name="step" format="integer" />
        <attr name="text" format="string" />
        <attr name="mode" format="enum">
            <enum name="auto" value="0" />
            <enum name="custom" value="1" />
        </attr>
        <attr name="stepper_background" format="color|reference" />
        <attr name="stepper_buttonBackground" format="color|reference" />
        <attr name="stepper_contentBackground" format="color|reference" />
        <attr name="stepper_contentTextColor" format="color" />
        <attr name="stepper_contentTextSize" format="float" />
        <attr name="stepper_leftButtonBackground" format="color|reference" />
        <attr name="stepper_rightButtonBackground" format="color|reference" />
        <attr name="stepper_leftButtonResources" format="color|reference" />
        <attr name="stepper_rightButtonResources" format="color|reference" />
    </declare-styleable>
    <declare-styleable name="Banner">
        <attr name="default_image" format="reference" />
        <attr name="delay_time" format="dimension" />
        <attr name="is_auto_play" format="boolean" />
        <attr name="title_background" format="color|reference" />
        <attr name="title_textcolor" format="color" />
        <attr name="title_textsize" format="dimension" />
        <attr name="title_height" format="dimension" />
        <attr name="indicator_width" format="dimension" />
        <attr name="indicator_height" format="dimension" />
        <attr name="indicator_margin" format="dimension" />
        <attr name="indicator_drawable_selected" format="reference" />
        <attr name="indicator_drawable_unselected" format="reference" />
        <!-- <attr name="indicator_animator" format="reference" /> -->
        <!-- <attr name="indicator_animator_reverse" format="reference" /> -->
    </declare-styleable>
    <declare-styleable name="TagView">
        <attr name="lineMargin" format="dimension" />
        <attr name="tagMargin" format="dimension" />
        <attr name="textPaddingLeft" format="dimension" />
        <attr name="textPaddingRight" format="dimension" />
        <attr name="textPaddingTop" format="dimension" />
        <attr name="textPaddingBottom" format="dimension" />
    </declare-styleable>
    <declare-styleable name="HorizontalProgressBarWithNumber">
        <attr name="progress_unreached_color" format="color" />
        <attr name="progress_reached_color" format="color" />
        <attr name="progress_reached_bar_height" format="dimension" />
        <attr name="progress_unreached_bar_height" format="dimension" />
        <attr name="progress_text_size" format="dimension" />
        <attr name="progress_text_color" format="color" />
        <attr name="progress_text_offset" format="dimension" />
        <attr name="progress_text_visibility" format="enum">
            <enum name="visible" value="0" />
            <enum name="invisible" value="1" />
        </attr>
    </declare-styleable>
    <declare-styleable name="RoundProgressBarWidthNumber">
        <attr name="radious" format="dimension" />
    </declare-styleable>
    <declare-styleable name="TagFlowLayout">
        <attr name="auto_select_effect" format="boolean" />
        <attr name="max_select" format="integer" />
        <attr name="gravity">
            <enum name="left" value="-1" />
            <enum name="center" value="0" />
            <enum name="right" value="1" />
        </attr>
    </declare-styleable>
    <declare-styleable name="TagCloudView">
        <attr name="tcvBackground" format="reference" />
        <attr name="tcvTextColor" format="color" />
        <attr name="tcvBorder" format="dimension" />
        <attr name="tcvTextSize" format="integer" />
        <attr name="tcvBorderItem" format="dimension" />
        <attr name="tcvItemBorderVertical" format="dimension" />
        <attr name="tcvItemBorderHorizontal" format="dimension" />
        <attr name="tcvSingleLine" format="boolean" />
        <attr name="tcvShowEndText" format="boolean" />
        <attr name="tcvShowRightImg" format="boolean" />
        <attr name="tcvEndText" format="string" />
        <attr name="tcvRightResId" format="reference" />
        <attr name="tcvCanTagClick" format="boolean" />
        <attr name="tcvTagResId" format="reference" />
    </declare-styleable>

    <attr name="cropImageStyle" format="reference" />

    <declare-styleable name="CropImageView">
        <attr name="highlightColor" format="reference|color" />
        <attr name="showThirds" format="boolean" />
        <attr name="showCircle" format="boolean" />
        <attr name="showHandles">
            <enum name="changing" value="0" />
            <enum name="always" value="1" />
            <enum name="never" value="2" />
        </attr>
    </declare-styleable>
    <declare-styleable name="SwipeBackLayout">
        <attr name="edge_size" format="dimension" />
        <attr name="edge_flag">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
            <enum name="bottom" value="2" />
            <enum name="all" value="3" />
        </attr>
        <attr name="shadow_left" format="reference" />
        <attr name="shadow_right" format="reference" />
        <attr name="shadow_bottom" format="reference" />
    </declare-styleable>

    <attr name="SwipeBackLayoutStyle" format="reference" />

    <declare-styleable name="TagCloudLinkView">
        <attr name="tagLayoutColor" format="color" />
        <attr name="tagTextColor" format="color" />
        <attr name="tagTextSize" format="dimension" />
        <attr name="isDeletable" format="boolean" />
        <attr name="deletableTextColor" format="color" />
        <attr name="deletableTextSize" format="dimension" />
    </declare-styleable>
    <declare-styleable name="SegmentedGroup">
        <attr name="sc_corner_radius" format="dimension" />
        <attr name="sc_border_width" format="dimension" />
        <attr name="sc_tint_color" format="color" />
        <attr name="sc_checked_text_color" format="color" />
        <attr name="sc_unchecked_tint_color" format="color" />
    </declare-styleable>
    <declare-styleable name="AwesomeRadioButton">
        <attr name="awesome_text" format="string" />
    </declare-styleable>
    <declare-styleable name="BGABadgeView">

        <!-- 徽章背景色 -->
        <attr name="badge_bgColor" format="reference|color" />
        <!-- 徽章文本的颜色 -->
        <attr name="badge_textColor" format="reference|color" />
        <!-- 徽章文本字体大小 -->
        <attr name="badge_textSize" format="reference|dimension" />
        <!-- 徽章背景与宿主控件上下边缘间距离 -->
        <attr name="badge_verticalMargin" format="reference|dimension" />
        <!-- 徽章背景与宿主控件左右边缘间距离 -->
        <attr name="badge_horizontalMargin" format="reference|dimension" />
        <!-- 徽章文本边缘与徽章背景边缘间的距离 -->
        <attr name="badge_padding" format="reference|dimension" />
        <!-- 徽章在宿主控件中的位置 -->
        <attr name="badge_gravity" format="enum">
            <enum name="rightTop" value="0" />
            <enum name="rightCenter" value="1" />
            <enum name="rightBottom" value="2" />
        </attr>
        <!-- 是否可以拖拽删除徽章 -->
        <attr name="badge_dragable" format="boolean" />
        <!-- 拖拽徽章超出轨迹范围后，再次放回到轨迹范围时，是否恢复轨迹 -->
        <attr name="badge_isResumeTravel" format="boolean" />
        <!-- 徽章描边宽度 -->
        <attr name="badge_borderWidth" format="reference|dimension" />
        <!-- 徽章描边颜色 -->
        <attr name="badge_borderColor" format="reference|color" />
    </declare-styleable>
    <declare-styleable name="wheelViewStyle">
        <attr name="textSize" format="dimension" />
    </declare-styleable>
    <declare-styleable name="decimalCountStyle">
        <attr name="decimalSize" format="integer" />
    </declare-styleable>
    <declare-styleable name="Rotate3dAnimation">
        <attr name="rollType" format="enum">
            <enum name="x" value="0" />
            <enum name="y" value="1" />
            <enum name="z" value="2" />
        </attr>
        <attr name="fromDeg" format="float" />
        <attr name="toDeg" format="float" />
        <attr name="pivotX" format="fraction" />
        <attr name="pivotY" format="fraction" />
    </declare-styleable>
    <declare-styleable name="ProgressWheel">
        <attr name="matProg_progressIndeterminate" format="boolean" />
        <attr name="matProg_barColor" format="color" />
        <attr name="matProg_rimColor" format="color" />
        <attr name="matProg_rimWidth" format="dimension" />
        <attr name="matProg_spinSpeed" format="float" />
        <attr name="matProg_barSpinCycleTime" format="integer" />
        <attr name="matProg_circleRadius" format="dimension" />
        <attr name="matProg_fillRadius" format="boolean" />
        <attr name="matProg_barWidth" format="dimension" />
        <attr name="matProg_linearProgress" format="boolean" />
    </declare-styleable>
    <declare-styleable name="SimpleArcLoader">
        <attr name="arc_style" format="enum">
            <enum name="simple_arc" value="0"></enum>
            <enum name="complete_arc" value="1"></enum>
        </attr>
        <attr name="arc_margin" format="dimension" />
        <attr name="arc_thickness" format="dimension" />
        <attr name="arc_speed" format="enum">
            <enum name="slow" value="0"></enum>
            <enum name="medium" value="1"></enum>
            <enum name="fast" value="2"></enum>
        </attr>
        <attr name="arc_colors" format="reference"></attr>
    </declare-styleable>

    <!-- PixlUI -->
    <attr name="typeface" format="string" />

    <declare-styleable name="com.neopixl.pixlui.components.textview.TextView">
        <attr name="typeface" />
    </declare-styleable>
    <declare-styleable name="com.neopixl.pixlui.components.button.Button">
        <attr name="typeface" />
    </declare-styleable>
    <declare-styleable name="com.neopixl.pixlui.components.edittext.EditText">
        <attr name="typeface" />
    </declare-styleable>
    <!-- PixlUI -->
    <!-- CircleImageView -->
    <declare-styleable name="CircleImageView">
        <attr name="border_width" format="dimension" />
        <attr name="border_color" format="color" />
    </declare-styleable>
    <!-- CircleImageView -->

    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color" />
        <attr name="pstsUnderlineColor" format="color" />
        <attr name="pstsDividerColor" format="color" />
        <attr name="pstsIndicatorHeight" format="dimension" />
        <attr name="pstsUnderlineHeight" format="dimension" />
        <attr name="pstsDividerPadding" format="dimension" />
        <attr name="pstsTabPaddingLeftRight" format="dimension" />
        <attr name="pstsScrollOffset" format="dimension" />
        <attr name="pstsTabBackground" format="reference" />
        <attr name="pstsShouldExpand" format="boolean" />
        <attr name="pstsTextAllCaps" format="boolean" />
    </declare-styleable>
    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>

</resources>